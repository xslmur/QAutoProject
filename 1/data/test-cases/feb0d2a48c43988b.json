{"uid":"feb0d2a48c43988b","name":"test_login_p1_1","fullName":"test_login_UI.TestLoginPopUp#test_login_p1_1","historyId":"93d88cfa32814b2f9f53b5cda49b9af4","time":{"start":1690822438006,"stop":1690822443390,"duration":5384},"description":"check for successful login with valid credentials","descriptionHtml":"<p>check for successful login with valid credentials</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"userNavDropdown\"]\"}\n  (Session info: headless chrome=115.0.5790.102)\nStacktrace:\n#0 0x55b9fc4cb783 <unknown>\n#1 0x55b9fc1f7917 <unknown>\n#2 0x55b9fc23631b <unknown>\n#3 0x55b9fc236411 <unknown>\n#4 0x55b9fc271674 <unknown>\n#5 0x55b9fc256e2d <unknown>\n#6 0x55b9fc26f0d9 <unknown>\n#7 0x55b9fc256bd3 <unknown>\n#8 0x55b9fc22aa7b <unknown>\n#9 0x55b9fc22b81e <unknown>\n#10 0x55b9fc48ce98 <unknown>\n#11 0x55b9fc490d67 <unknown>\n#12 0x55b9fc49b32c <unknown>\n#13 0x55b9fc491993 <unknown>\n#14 0x55b9fc460827 <unknown>\n#15 0x55b9fc4b58a8 <unknown>\n#16 0x55b9fc4b5a36 <unknown>\n#17 0x55b9fc4c45f3 <unknown>\n#18 0x7f1a4e339b43 <unknown>","statusTrace":"self = <test_login_UI.TestLoginPopUp object at 0x7fcd99431450>\n\n    @allure.description(\"check for successful login with valid credentials\")\n    @allure.issue(issue_link(\"p1_1\"), \"Test issue: Login\")\n    def test_login_p1_1(self):\n        self.login_facade.do_login(WEB_USER, WEB_PASS)\n        # assert self.login_facade.get_login_feedback().get_text() == 'Email is incorrect'\n>       assert self.garage_facade.get_my_profile_button().is_displayed()\n\ntest_login_UI.py:166: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfacades/garage_facade.py:11: in get_my_profile_button\n    return self._garage_page.get_my_profile_button()\npages/garage_page.py:25: in get_my_profile_button\n    return Button(self._driver.find_element(By.ID, \"userNavDropdown\"))\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fcd999a2210>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55b9fc4b5a36 \\\\u003Cunknown>\\\\n#17 0x55b9fc4c45f3 \\\\u003Cunknown>\\\\n#18 0x7f1a4e339b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"userNavDropdown\"]\"}\nE         (Session info: headless chrome=115.0.5790.102)\nE       Stacktrace:\nE       #0 0x55b9fc4cb783 <unknown>\nE       #1 0x55b9fc1f7917 <unknown>\nE       #2 0x55b9fc23631b <unknown>\nE       #3 0x55b9fc236411 <unknown>\nE       #4 0x55b9fc271674 <unknown>\nE       #5 0x55b9fc256e2d <unknown>\nE       #6 0x55b9fc26f0d9 <unknown>\nE       #7 0x55b9fc256bd3 <unknown>\nE       #8 0x55b9fc22aa7b <unknown>\nE       #9 0x55b9fc22b81e <unknown>\nE       #10 0x55b9fc48ce98 <unknown>\nE       #11 0x55b9fc490d67 <unknown>\nE       #12 0x55b9fc49b32c <unknown>\nE       #13 0x55b9fc491993 <unknown>\nE       #14 0x55b9fc460827 <unknown>\nE       #15 0x55b9fc4b58a8 <unknown>\nE       #16 0x55b9fc4b5a36 <unknown>\nE       #17 0x55b9fc4c45f3 <unknown>\nE       #18 0x7f1a4e339b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_class_fixture_TestLoginPopUp","time":{"start":1690822413871,"stop":1690822413871,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_xunit_setup_method_fixture_TestLoginPopUp","time":{"start":1690822437356,"stop":1690822438006,"duration":650},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"check for successful login with valid credentials","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"userNavDropdown\"]\"}\n  (Session info: headless chrome=115.0.5790.102)\nStacktrace:\n#0 0x55b9fc4cb783 <unknown>\n#1 0x55b9fc1f7917 <unknown>\n#2 0x55b9fc23631b <unknown>\n#3 0x55b9fc236411 <unknown>\n#4 0x55b9fc271674 <unknown>\n#5 0x55b9fc256e2d <unknown>\n#6 0x55b9fc26f0d9 <unknown>\n#7 0x55b9fc256bd3 <unknown>\n#8 0x55b9fc22aa7b <unknown>\n#9 0x55b9fc22b81e <unknown>\n#10 0x55b9fc48ce98 <unknown>\n#11 0x55b9fc490d67 <unknown>\n#12 0x55b9fc49b32c <unknown>\n#13 0x55b9fc491993 <unknown>\n#14 0x55b9fc460827 <unknown>\n#15 0x55b9fc4b58a8 <unknown>\n#16 0x55b9fc4b5a36 <unknown>\n#17 0x55b9fc4c45f3 <unknown>\n#18 0x7f1a4e339b43 <unknown>","statusTrace":"self = <test_login_UI.TestLoginPopUp object at 0x7fcd99431450>\n\n    @allure.description(\"check for successful login with valid credentials\")\n    @allure.issue(issue_link(\"p1_1\"), \"Test issue: Login\")\n    def test_login_p1_1(self):\n        self.login_facade.do_login(WEB_USER, WEB_PASS)\n        # assert self.login_facade.get_login_feedback().get_text() == 'Email is incorrect'\n>       assert self.garage_facade.get_my_profile_button().is_displayed()\n\ntest_login_UI.py:166: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfacades/garage_facade.py:11: in get_my_profile_button\n    return self._garage_page.get_my_profile_button()\npages/garage_page.py:25: in get_my_profile_button\n    return Button(self._driver.find_element(By.ID, \"userNavDropdown\"))\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fcd999a2210>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55b9fc4b5a36 \\\\u003Cunknown>\\\\n#17 0x55b9fc4c45f3 \\\\u003Cunknown>\\\\n#18 0x7f1a4e339b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"userNavDropdown\"]\"}\nE         (Session info: headless chrome=115.0.5790.102)\nE       Stacktrace:\nE       #0 0x55b9fc4cb783 <unknown>\nE       #1 0x55b9fc1f7917 <unknown>\nE       #2 0x55b9fc23631b <unknown>\nE       #3 0x55b9fc236411 <unknown>\nE       #4 0x55b9fc271674 <unknown>\nE       #5 0x55b9fc256e2d <unknown>\nE       #6 0x55b9fc26f0d9 <unknown>\nE       #7 0x55b9fc256bd3 <unknown>\nE       #8 0x55b9fc22aa7b <unknown>\nE       #9 0x55b9fc22b81e <unknown>\nE       #10 0x55b9fc48ce98 <unknown>\nE       #11 0x55b9fc490d67 <unknown>\nE       #12 0x55b9fc49b32c <unknown>\nE       #13 0x55b9fc491993 <unknown>\nE       #14 0x55b9fc460827 <unknown>\nE       #15 0x55b9fc4b58a8 <unknown>\nE       #16 0x55b9fc4b5a36 <unknown>\nE       #17 0x55b9fc4c45f3 <unknown>\nE       #18 0x7f1a4e339b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchElementException","steps":[{"name":"Do WEB UI Log in","time":{"start":1690822438006,"stop":1690822438351,"duration":345},"status":"passed","steps":[{"name":"Click Sign in button","time":{"start":1690822438006,"stop":1690822438062,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Fill email and password fields","time":{"start":1690822438062,"stop":1690822438305,"duration":243},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"email","value":"[hidden]"},{"name":"password","value":"[hidden]"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Click Log in button","time":{"start":1690822438305,"stop":1690822438351,"duration":46},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"email","value":"[hidden]"},{"name":"password","value":"[hidden]"}],"stepsCount":3,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Search for Profile button","time":{"start":1690822438351,"stop":1690822443389,"duration":5038},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"userNavDropdown\"]\"}\n  (Session info: headless chrome=115.0.5790.102)\nStacktrace:\n#0 0x55b9fc4cb783 <unknown>\n#1 0x55b9fc1f7917 <unknown>\n#2 0x55b9fc23631b <unknown>\n#3 0x55b9fc236411 <unknown>\n#4 0x55b9fc271674 <unknown>\n#5 0x55b9fc256e2d <unknown>\n#6 0x55b9fc26f0d9 <unknown>\n#7 0x55b9fc256bd3 <unknown>\n#8 0x55b9fc22aa7b <unknown>\n#9 0x55b9fc22b81e <unknown>\n#10 0x55b9fc48ce98 <unknown>\n#11 0x55b9fc490d67 <unknown>\n#12 0x55b9fc49b32c <unknown>\n#13 0x55b9fc491993 <unknown>\n#14 0x55b9fc460827 <unknown>\n#15 0x55b9fc4b58a8 <unknown>\n#16 0x55b9fc4b5a36 <unknown>\n#17 0x55b9fc4c45f3 <unknown>\n#18 0x7f1a4e339b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/login_auto_testing/login_auto_testing/facades/garage_facade.py\", line 11, in get_my_profile_button\n    return self._garage_page.get_my_profile_button()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/login_auto_testing/login_auto_testing/pages/garage_page.py\", line 25, in get_my_profile_button\n    return Button(self._driver.find_element(By.ID, \"userNavDropdown\"))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 831, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestLoginPopUp::0","time":{"start":1690822443422,"stop":1690822443492,"duration":70},"status":"passed","steps":[],"attachments":[{"uid":"5dd5a2be0b8586cd","name":"20230731-165403","source":"5dd5a2be0b8586cd.attach","type":"image/png","size":72253}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"_xunit_setup_class_fixture_TestLoginPopUp::0","time":{"start":1690822449626,"stop":1690822449701,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"suite","value":"test_login_UI"},{"name":"subSuite","value":"TestLoginPopUp"},{"name":"host","value":"fv-az551-754"},{"name":"thread","value":"2346-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_login_UI"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Test issue: Login","url":"https://github.com/xslmur/login_auto_testing#p1_1","type":"issue"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"feb0d2a48c43988b.json","parameterValues":[]}