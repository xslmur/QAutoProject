{"uid":"36144216423d1c7b","name":"test_user_register_wrong_password [tttttttttt]","fullName":"test_api_login.TestRegister#test_user_register_wrong_password","historyId":"a2c1379f0af2134efa0142ef83645a23","time":{"start":1691177792468,"stop":1691177792897,"duration":429},"description":"Verifying that the system correctly handles user registration with a medium-length password of 10 't's.","descriptionHtml":"<p>Verifying that the system correctly handles user registration with a medium-length password of 10 't's.</p>\n","status":"skipped","statusMessage":"XFAIL Is expected to be failed coz API has bug in the password field validator\n\nAssertionError: assert 'Passwords do not match' == 'Password has... small letter'\n  - Password has to be from 8 to 15 characters long and contain at least one integer, one capital, and one small letter\n  + Passwords do not match","statusTrace":"self = <test_api_login.TestRegister object at 0x7f721a636590>\npwd = 'tttttttttt', title = 'Medium-Length Invalid'\ndesc = \"medium-length password of 10 't's.\"\n\n    @pytest.mark.parametrize('pwd,title,desc', [\n        ('test', \"Short\", \"short password of 'test'.\"),\n        ('t1T', \"Invalid Characters\", \"invalid password containing 't1T'.\"),\n        ('t' * 20, \"Long\", \"long password of 20 't's.\"),\n        pytest.param('t' * 10, \"Medium-Length Invalid\", \"medium-length password of 10 't's.\",\n                     marks=pytest.mark.xfail(reason=\"Is expected to be failed coz API has bug in the \"\n                                                    \"password field validator\")),\n    ])\n    def test_user_register_wrong_password(self, pwd, title, desc):\n        allure.dynamic.title(f\"test_user_register_wrong_password [{pwd}]\")\n        allure.dynamic.description(f\"Verifying that the system correctly handles user registration with a {desc}\")\n    \n        malformed_user = deepcopy(self.user)\n        malformed_user.user_register.password = pwd\n    \n        result = malformed_user.register()\n        if result['status'] == 'ok':\n            malformed_user.delete()\n    \n        assert result['status'] == 'error'\n>       assert result['message'] == ('Password has to be from 8 to 15 characters long '\n                                     'and contain at least one integer, one capital, and one small letter')\nE       AssertionError: assert 'Passwords do not match' == 'Password has... small letter'\nE         - Password has to be from 8 to 15 characters long and contain at least one integer, one capital, and one small letter\nE         + Passwords do not match\n\ntest_api_login.py:129: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_class_fixture_TestRegister","time":{"start":1691177786122,"stop":1691177786123,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Verifying that the system correctly handles user registration with a medium-length password of 10 't's.","status":"skipped","statusMessage":"XFAIL Is expected to be failed coz API has bug in the password field validator\n\nAssertionError: assert 'Passwords do not match' == 'Password has... small letter'\n  - Password has to be from 8 to 15 characters long and contain at least one integer, one capital, and one small letter\n  + Passwords do not match","statusTrace":"self = <test_api_login.TestRegister object at 0x7f721a636590>\npwd = 'tttttttttt', title = 'Medium-Length Invalid'\ndesc = \"medium-length password of 10 't's.\"\n\n    @pytest.mark.parametrize('pwd,title,desc', [\n        ('test', \"Short\", \"short password of 'test'.\"),\n        ('t1T', \"Invalid Characters\", \"invalid password containing 't1T'.\"),\n        ('t' * 20, \"Long\", \"long password of 20 't's.\"),\n        pytest.param('t' * 10, \"Medium-Length Invalid\", \"medium-length password of 10 't's.\",\n                     marks=pytest.mark.xfail(reason=\"Is expected to be failed coz API has bug in the \"\n                                                    \"password field validator\")),\n    ])\n    def test_user_register_wrong_password(self, pwd, title, desc):\n        allure.dynamic.title(f\"test_user_register_wrong_password [{pwd}]\")\n        allure.dynamic.description(f\"Verifying that the system correctly handles user registration with a {desc}\")\n    \n        malformed_user = deepcopy(self.user)\n        malformed_user.user_register.password = pwd\n    \n        result = malformed_user.register()\n        if result['status'] == 'ok':\n            malformed_user.delete()\n    \n        assert result['status'] == 'error'\n>       assert result['message'] == ('Password has to be from 8 to 15 characters long '\n                                     'and contain at least one integer, one capital, and one small letter')\nE       AssertionError: assert 'Passwords do not match' == 'Password has... small letter'\nE         - Password has to be from 8 to 15 characters long and contain at least one integer, one capital, and one small letter\nE         + Passwords do not match\n\ntest_api_login.py:129: AssertionError","steps":[],"attachments":[{"uid":"9c9967f5db25ed20","name":"API request POST https://qauto2.forstudy.space/api/auth/signup","source":"9c9967f5db25ed20.json","type":"application/json","size":136},{"uid":"6e8dc14e81260671","name":"API reply 400 Bad Request","source":"6e8dc14e81260671.json","type":"application/json","size":53}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_class_fixture_TestRegister::0","time":{"start":1691177793374,"stop":1691177793614,"duration":240},"status":"passed","steps":[],"attachments":[{"uid":"e7491238be41398d","name":"API request POST https://qauto2.forstudy.space/api/auth/signin","source":"e7491238be41398d.json","type":"application/json","size":75},{"uid":"2dd39a22ba654c55","name":"API reply 400 Bad Request","source":"2dd39a22ba654c55.json","type":"application/json","size":54},{"uid":"79cd42937f395be4","name":"API request DELETE https://qauto2.forstudy.space/api/users","source":"79cd42937f395be4.json","type":"application/json","size":0},{"uid":"a85f2724c51ee33c","name":"API reply 401 Unauthorized","source":"a85f2724c51ee33c.json","type":"application/json","size":48}],"parameters":[],"stepsCount":0,"attachmentsCount":4,"shouldDisplayMessage":false,"hasContent":true}],"labels":[{"name":"tag","value":"@pytest.mark.xfail(reason='Is expected to be failed coz API has bug in the password field validator')"},{"name":"suite","value":"test_api_login"},{"name":"subSuite","value":"TestRegister"},{"name":"host","value":"fv-az487-13"},{"name":"thread","value":"2029-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_api_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"desc","value":"'medium-length password of 10 't's.'"},{"name":"pwd","value":"'tttttttttt'"},{"name":"title","value":"'Medium-Length Invalid'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":2,"passed":0,"unknown":0,"total":2},"items":[{"uid":"27017d12f80614b7","reportUrl":"https://xslmur.github.io/QAutoProject/19//#testresult/27017d12f80614b7","status":"skipped","statusDetails":"XFAIL Is expected to be failed coz API has bug in the password field validator\n\nAssertionError: assert 'Passwords do not match' == 'Password has... small letter'\n  - Password has to be from 8 to 15 characters long and contain at least one integer, one capital, and one small letter\n  + Passwords do not match","time":{"start":1691177526559,"stop":1691177526903,"duration":344}}]},"tags":["@pytest.mark.xfail(reason='Is expected to be failed coz API has bug in the password field validator')"]},"source":"36144216423d1c7b.json","parameterValues":["'medium-length password of 10 't's.'","'tttttttttt'","'Medium-Length Invalid'"]}